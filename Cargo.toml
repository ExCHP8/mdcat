[package]
name = "mdcat"
description = "cat for markdown: Show markdown documents in terminals"
readme = "README.md"
documentation = "https://docs.rs/mdcat"
keywords = ["markdown", "less", "cat"]
homepage.workspace = true
repository.workspace = true
version.workspace = true
categories.workspace = true
license.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true

[features]
default = ["mdcat-http-reqwest/native-tls"]
static = ["mdcat-http-reqwest/rustls-tls-native-roots"]

[dependencies]
anyhow = { version = "1.0.70", default-features = false, features = ["std"] }
clap = { version = "4.2.2", default-features = false, features = ["std", "derive", "help", "usage", "error-context"] }
human-panic = { version = "2.0.0", default-features = false, features = ["color"] }
pulldown-cmark = { version = "0.9.2", default-features = false, features = ['simd'] }
reqwest = { version = "0.11.16", default-features = false }
shell-words = { version = "1.1.0", default-features = false, features = ["std"] }
syntect = { version = "5.0.0", default-features = false, features = ["regex-fancy", "default-syntaxes"] }
tracing = { version = "0.1.37", default-features = false, features = ["attributes"] }
tracing-subscriber = { version = "0.3.16", default-features = false, features = ["env-filter", "std", "fmt", "ansi"] }
system_proxy = { version = "0.3.2", default-features = false }

# Our own crates; pinned to an exact version because we release all of this repo
# in a single version. cargo release takes care of updating these.
mdcat-http-reqwest = { version = "=2.1.2", path = "mdcat-http-reqwest", default-features = false}
pulldown-cmark-mdcat = { version = "=2.1.2", path = "pulldown-cmark-mdcat" }

[dev-dependencies]
similar-asserts = "1.4.2"

[build-dependencies]
# To generate completions during build
clap = { version = "4.2.2", features = ["derive"] }
clap_complete = "4.2.0"

[target.'cfg(windows)'.dependencies]
anstyle-query = { version = "1.0.0", default-features = false }

[profile.release]
# Enable LTO for release builds; makes the binary a lot smaller
lto = true

[package.metadata.release]
release = true
pre-release-replacements = [
    # Update version and release date in manpage
    { file="mdcat.1.adoc", search="(?m)^:revnumber:.*$", replace = ":revnumber: {{version}}" },
    { file="mdcat.1.adoc", search="(?m)^:revdate:.*$", replace = ":revdate: {{date}}" },
    # Update the changelog
    { file="CHANGELOG.md", search="## \\[Unreleased\\]", replace = "## [Unreleased]\n\n## [{{version}}] â€“ {{date}}", exactly = 1 },
    { file="CHANGELOG.md", search="HEAD", replace = "{{tag_name}}", exactly = 1 },
    { file="CHANGELOG.md", search="\\[Unreleased\\]: ", replace = "[Unreleased]: https://github.com/swsnr/mdcat/compare/{{tag_name}}...HEAD\n[{{version}}]: ", exactly = 1 },
]

[workspace]
members = [
  "pulldown-cmark-mdcat",
  "mdcat-http-reqwest"
]

[workspace.package]
homepage = "https://github.com/swsnr/mdcat"
repository = "https://github.com/swsnr/mdcat"
version = "2.1.2"
categories = ["command-line-utilities", "text-processing"]
license = "MPL-2.0 AND Apache-2.0"
authors = ["Sebastian Wiesner <sebastian@swsnr.de>"]
edition = "2021"
rust-version = "1.76"

[workspace.metadata.release]
allow-branch = ["main"]
pre-release-commit-message = "Release {{version}}"
tag-prefix = "mdcat-"
tag-name = "{{prefix}}{{version}}"
tag-message = "mdcat {{version}}"
sign-tag = true
# Github CI does this for us.
verify = false
